---
description: 发布器（publishers）配置与实现约定
---

# 发布器配置与实现约定（publishers-config）

适用范围：`publishers/*` 及其配置 `config/publishers/*.yml`。

## 发现与注册
- 发布器基类位于 [publishers/base.py](mdc:publishers/base.py)，动态发现与注册见 [publishers/loader.py](mdc:publishers/loader.py)。
- 新增平台时，在 `publishers/<platform>/publisher.py` 中实现具体发布逻辑，并保证被加载器发现。

## 内容组装
- 文本统一通过 `BasePublisher.prepare_content()` 生成：
  - 是否添加编号/序号
  - 是否包含 @ 提及
  - 分段文本策略
  - 外部链接拼接策略
- 以上行为由平台配置文件控制：
  - 哔哩哔哩：[config/publishers/bilibili.yml](mdc:config/publishers/bilibili.yml)
  - QQ 空间：[config/publishers/qzone.yml](mdc:config/publishers/qzone.yml)
  - 小红书：[config/publishers/rednote.yml](mdc:config/publishers/rednote.yml)

## 输入依赖
- 依赖处理管道写回的字段：
  - `submission.processed_content`（HTML）
  - `submission.rendered_images`（图片路径/句柄）
  - 可选：`submission.llm_result`（补充标签/话题/外链）

## 错误处理
- 对平台接口错误进行分级记录并可重试；避免一次失败导致整体中断。
- 谨慎处理频率限制与鉴权失败；必要时退避重试。

## 配置结构建议
- 鉴权：`access_key` / `cookies` / `token` 等敏感字段
- 文本：`include_index`、`allow_mentions`、`segment_strategy`、`link_strategy`
- 图片：`max_images`、`image_format`、`quality`
- 发布策略：`retry`、`backoff`、`timeout`
---
alwaysApply: false
description: 发布器（publishers）配置与实现约定
globs: publishers/**/*.py,config/publishers/*.yml
---
## 发布器发现与配置

- 启用由 `config/publishers/<platform>.yml` 的 `enabled: true` 控制。
- 发现逻辑优先按平台显式导入 `publishers.<key>.publisher`，失败时回退包遍历（见 `publishers/loader.py`）。
- 平台键来自包路径：`publishers.<key>.* -> <key>`。

### 基类职责（`publishers/base.py`）
- `initialize()` 加载账号组配置至 `self.accounts`（主/副账号）。
- `prepare_content(submission, include_text)` 统一组装文本，受平台配置控制：
  - `include_publish_id`、`include_at_sender`、`include_segments`、`publish_text`。
  - 链接始终追加并美化展示；图片来源可选 `rendered|chat|both`（去重保序）。
- `record_publish()` 记录 `PublishRecord`，成功时更新 `Submission.status=PUBLISHED` 与 `published_at`。

### 平台配置
- 使用 `utils/common.get_platform_config(key)`，在发布器内通过 `_get_platform_config()` 访问。

相关文件：[`publishers/base.py`](mdc:publishers/base.py)、[`publishers/loader.py`](mdc:publishers/loader.py)、[`config/publishers/qzone.yml`](mdc:config/publishers/qzone.yml)、[`config/publishers/bilibili.yml`](mdc:config/publishers/bilibili.yml)、[`config/publishers/rednote.yml`](mdc:config/publishers/rednote.yml)
---
description: 发布器（publishers）配置与实现约定
globs: publishers/*.py,publishers/**/*.py,services/*.py
---
## 发布器发现与配置

- 启用由 `config/publishers/<platform>.yml` 的 `enabled: true` 控制。
- 发现逻辑优先按平台显式导入 `publishers.<key>.publisher`，失败时回退到包遍历。
- 平台键来自包路径：`publishers.<key>.* -> <key>`（见 `publishers/loader.py`）。

### 基类职责（`publishers/base.py`）
- `initialize()` 加载账号组配置到 `self.accounts`（主/副账号）。
- `prepare_content(submission, include_text)` 统一组装文本，受平台配置控制：
  - `include_publish_id`、`include_at_sender`、`include_segments`、`publish_text`。
  - 链接始终追加并美化展示；图片来源可选 `rendered|chat|both`。
- `record_publish()` 统一记录 `PublishRecord` 并在成功时更新 `Submission.status=PUBLISHED`。

### 平台配置读取
- 使用 `utils/common.get_platform_config(key)`，在发布器内通过 `_get_platform_config()` 访问。
---
description: 发布器（publishers）配置与实现约定
globs: publishers/**/*.py,config/publishers/*.yml
---
## 发布器发现与配置

- 启用由 `config/publishers/<platform>.yml` 的 `enabled: true` 控制。
- 发现逻辑优先按平台显式导入 `publishers.<key>.publisher`，失败时回退到包遍历。
- 平台键来自包路径：`publishers.<key>.* -> <key>`（见 `publishers/loader.py`）。

### 基类职责（`publishers/base.py`）
- `initialize()` 加载账号组配置到 `self.accounts`（主/副账号）。
- `prepare_content(submission, include_text)` 统一组装文本，受平台配置控制：
  - `include_publish_id`、`include_at_sender`、`include_segments`、`publish_text`。
  - 链接始终追加并美化展示；图片来源可选 `rendered|chat|both`。
- `record_publish()` 统一记录 `PublishRecord` 并在成功时更新 `Submission.status=PUBLISHED`。

### 平台配置读取
- 使用 `utils/common.get_platform_config(key)`，在发布器内通过 `_get_platform_config()` 访问。

